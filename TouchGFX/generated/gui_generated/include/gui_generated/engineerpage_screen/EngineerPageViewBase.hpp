/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ENGINEERPAGEVIEWBASE_HPP
#define ENGINEERPAGEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/engineerpage_screen/EngineerPagePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class EngineerPageViewBase : public touchgfx::View<EngineerPagePresenter>
{
public:
    EngineerPageViewBase();
    virtual ~EngineerPageViewBase() {}
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box_EngineerPageBackground;
    touchgfx::TextAreaWithOneWildcard textArea_Temp;
    touchgfx::BoxProgress boxProgress_Temp;
    touchgfx::ButtonWithLabel DriverPageButtun;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_TEMP_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_TempBuffer[TEXTAREA_TEMP_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<EngineerPageViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // ENGINEERPAGEVIEWBASE_HPP
