/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DRIVERPAGEVIEWBASE_HPP
#define DRIVERPAGEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/driverpage_screen/DriverPagePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Gauge.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class DriverPageViewBase : public touchgfx::View<DriverPagePresenter>
{
public:
    DriverPageViewBase();
    virtual ~DriverPageViewBase() {}
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

    /*
     * Virtual Action Handlers
     */
    virtual void Time_SS()
    {
        // Override and implement this function in DriverPage
    }

    virtual void Time_RS()
    {
        // Override and implement this function in DriverPage
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box_DriverPageBackground;
    touchgfx::Gauge gauge_1;
    touchgfx::PainterRGB565 gauge_1Painter;
    touchgfx::TextAreaWithOneWildcard textArea_Speed;
    touchgfx::TextAreaWithTwoWildcards textArea_Time;
    touchgfx::ButtonWithLabel EngieneerPageButtun;
    touchgfx::ButtonWithLabel button_Timer_Reset;
    touchgfx::ButtonWithLabel button_Timer_Start;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_SPEED_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_SpeedBuffer[TEXTAREA_SPEED_SIZE];
    static const uint16_t TEXTAREA_TIMEBUFFER1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_TimeBuffer1[TEXTAREA_TIMEBUFFER1_SIZE];
    static const uint16_t TEXTAREA_TIMEBUFFER2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_TimeBuffer2[TEXTAREA_TIMEBUFFER2_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<DriverPageViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // DRIVERPAGEVIEWBASE_HPP
